{"version":3,"sources":["components/CalculatorKey.js","components/CalculatorDisplay.js","App.js","serviceWorker.js","index.js"],"names":["calculatorKey","props","className","btnStyle","onClick","onPress","children","calculatorDisplay","operations","results","App","useState","firstNumber","secondNumber","window","operator","result","operation","setOperation","handleNumber","number","parseToNumberValid","Math","round","parseFloat","decimate","string","isNaN","handleOperators","newResult","toString","includes","console","log","CalculatorDisplay","CalculatorKey","positiveNumber","slice","toggleSign","length","deletedNumber","handleDelete","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6ee423f5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst calculatorKey = props => {\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={props.btnStyle}\r\n\t\t\tonClick={() => props.onPress(props.children)} >\r\n\t\t\t{props.children}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport default calculatorKey;","import React from 'react';\r\n\r\nconst calculatorDisplay = ({operations, results}) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"calculator__display\">\r\n\t\t\t<div className=\"calculator__display__history\">\r\n\t\t\t\t{operations}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"calculator__display__result\">\r\n\t\t\t\t{results}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default calculatorDisplay;","import React, { useState }  from 'react';\nimport CalculatorKey from './components/CalculatorKey';\nimport CalculatorDisplay from './components/CalculatorDisplay';\nimport './App.scss';\n\nfunction App () {\n\tconst [operation, setOperation] = useState({\n\t\tfirstNumber: '0',\n\t\tsecondNumber: '',\n\t\twindow: '',\n\t\toperator: '+',\n\t\tresult: 0\n\t});\n\n\tconst handleNumber = (number) => {\n\t\tlet firstNumber = parseToNumberValid(operation.firstNumber);\n\t\tlet operator = operation.operator;\n\t\tlet result = parseToNumberValid(operation.result);\n\t\tlet secondNumber = operation.secondNumber + number;\n\n\t\tif (operator === \"+\") {\n\t\t\tresult = Math.round((parseFloat(`${firstNumber}`) + parseFloat(secondNumber)) * 100) / 100;\n\t\t} else if (operator === \"-\") {\n\t\t\tresult = Math.round((parseFloat(`${firstNumber}`) - parseFloat(secondNumber)) * 1000) / 1000;\n\t\t} else if (operator === \"/\") {\n\t\t\tresult = Math.round((parseFloat(`${firstNumber}`) / parseFloat(secondNumber)) * 1000) / 1000;\n\t\t} else if (operator === \"*\") {\n\t\t\tresult = Math.round((parseFloat(`${firstNumber}`) * parseFloat(secondNumber)) * 1000) / 1000;\n\t\t}\n\n\n\t\tif (operator === \".\") {\n\t\t\tdecimate(number, result, secondNumber)\n\t\t} else {\n\t\t\tsetOperation({\n\t\t\t\t...operation,\n\t\t\t\twindow: operation.window + number,\n\t\t\t\tresult: result,\n\t\t\t\tsecondNumber: secondNumber,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst parseToNumberValid = (string) => {\n\t\tlet number = parseFloat(string);\n\t\tif (isNaN(number)) {\n\t\t\treturn 0;\n\t\t}else{\n\t\t\treturn number;\n\t\t}\n\t}\n\n\tconst handleOperators = (operator) => {\n\t\tsetOperation({\n\t\t\t...operation,\n\t\t\twindow: operation.window + operator,\n\t\t\toperator: operator,\n\t\t\tfirstNumber: operation.result,\n\t\t\tsecondNumber: \"\",\n\t\t});\n\t};\n\n\tconst handleResult = () => {\n\t\tsetOperation({\n\t\t\t...operation,\n\t\t\tfirstNumber: \"\",\n\t\t\tsecondNumber: \"\",\n\t\t\twindow: operation.result,\n\t\t});\n\t};\n\n\tconst handleClear = () => {\n\t\tsetOperation({\n\t\t\t...operation,\n\t\t\tfirstNumber: \"0\",\n\t\t\tsecondNumber: \"\",\n\t\t\twindow: \"\",\n\t\t\toperator: \"+\",\n\t\t\tresult: 0,\n\t\t});\n\t};\n\n\tconst handleDelete = () => {\n\t\tif(operation.secondNumber.length > 1) {\n\t\t\tconst deletedNumber = operation.secondNumber.slice(0, operation.secondNumber.length - 1);\n\n\t\t\tsetOperation({\n\t\t\t\t...operation,\n\t\t\t\tsecondNumber: deletedNumber,\n\t\t\t\twindow: deletedNumber,\n\t\t\t\tresult:  parseFloat(deletedNumber)\n\t\t\t});\n\t\t}\n\t}\n\n\tconst handleDecimal = () => {\n\t\tif (operation.secondNumber === '') {\n\t\t\tsetOperation({\n\t\t\t\t...operation,\n\t\t\t\tsecondNumber: '0.',\n\t\t\t\twindow: '0.',\n\t\t\t\tresult:  parseFloat('0.')\n\t\t\t});\n\t\t} else if (operation.secondNumber !== operation.result && !operation.secondNumber.includes('.')) {\n\t\t\tsetOperation({\n\t\t\t\t...operation,\n\t\t\t\tsecondNumber: `${operation.result}.`,\n\t\t\t\twindow: `${operation.result}.`,\n\t\t\t\toperator: '.',\n\t\t\t\tresult:  parseFloat(`${operation.result}.`)\n\t\t\t});\n\t\t} else if(!operation.secondNumber.includes('.')) {\n\t\t\tsetOperation({\n\t\t\t\t...operation,\n\t\t\t\tsecondNumber: `${operation.secondNumber}.`,\n\t\t\t\twindow: `${operation.secondNumber}.`,\n\t\t\t\tresult:  parseFloat(`${operation.secondNumber}.`)\n\t\t\t});\n\t\t}\n\t}\n\n\tconst toggleSign = () => {\n\t\tlet number = operation.secondNumber;\n\t\tif (operation.secondNumber !== operation.result) number = `${operation.result}`;\n\n\t\tif (parseFloat(operation.secondNumber) > 0) {\n\t\t\tsetOperation({\n\t\t\t\t...operation,\n\t\t\t\tsecondNumber: `-${number}`,\n\t\t\t\twindow: `-${number}`,\n\t\t\t\tresult:  parseFloat(number) * -1\n\t\t\t});\n\t\t} else if (parseFloat(number) < 0) {\n\t\t\tconst positiveNumber = number.slice(1);\n\n\t\t\tsetOperation({\n\t\t\t\t...operation,\n\t\t\t\tsecondNumber: positiveNumber,\n\t\t\t\twindow: positiveNumber,\n\t\t\t\tresult:  parseFloat(number) * -1\n\t\t\t});\n\t\t}\n\t}\n\n\tconst decimate = (number, result, secondNumber) => {\n\t\t\tlet newResult = `${result}.${number}`;\n\t\t\tif(operation.result.toString().includes('.')) {\n\t\t\t\tnewResult = `${result}${number}`;\n\t\t\t\tconsole.log('kl');\n\t\t\t}\n\n\t\t\tsetOperation({\n\t\t\t\t...operation,\n\t\t\t\twindow: operation.window + number,\n\t\t\t\tresult: newResult,\n\t\t\t\tsecondNumber: secondNumber,\n\t\t\t});\n\t}\n\n\t//console.log(operation);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"calculator\">\n\t\t\t\t<CalculatorDisplay operations={operation.window} results={operation.result}/>\n\t\t\t\t<div className=\"calculator__keypad\">\n\t\t\t\t\t<div className=\"input-keys\">\n\t\t\t\t\t\t<div className=\"function-keys\">\n\t\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-clear\" onPress={() => handleClear()}>AC</CalculatorKey>\n\t\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-sign\" onPress={() => toggleSign()}>±</CalculatorKey>\n\t\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-del\" onPress={() => handleDelete()}>⌫</CalculatorKey>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"digit-keys\">\n\t\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-7\" onPress={() => handleNumber(7)}>7</CalculatorKey>\n\t\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-8\" onPress={() => handleNumber(8)}>8</CalculatorKey>\n\t\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-9\" onPress={() => handleNumber(9)}>9</CalculatorKey>\n\t\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-4\" onPress={() => handleNumber(4)}>4</CalculatorKey>\n\t\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-5\" onPress={() => handleNumber(5)}>5</CalculatorKey>\n\t\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-6\" onPress={() => handleNumber(6)}>6</CalculatorKey>\n\t\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-1\" onPress={() => handleNumber(1)}>1</CalculatorKey>\n\t\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-2\" onPress={() => handleNumber(2)}>2</CalculatorKey>\n\t\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-3\" onPress={() => handleNumber(3)}>3</CalculatorKey>\n\t\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-0\" onPress={() => handleNumber(0)}>0</CalculatorKey>\n\t\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-dot\" onPress={() => handleDecimal()}>●</CalculatorKey>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"operator-keys\">\n\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-divide\" onPress={() => handleOperators('/')}>÷</CalculatorKey>\n\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-multiply\" onPress={() => handleOperators('*')}>×</CalculatorKey>\n\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-subtract\" onPress={() => handleOperators('-')}>−</CalculatorKey>\n\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-add\" onPress={() => handleOperators('+')}>+</CalculatorKey>\n\t\t\t\t\t\t<CalculatorKey btnStyle=\"calculator__btn btn-equals\" onPress={() => handleResult()}>=</CalculatorKey>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}